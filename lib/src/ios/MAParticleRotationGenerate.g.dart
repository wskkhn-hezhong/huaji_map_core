// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:huaji_map_core/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';
import 'package:amap_core_fluttify/amap_core_fluttify.dart';
import 'package:amap_search_fluttify/amap_search_fluttify.dart';
import 'package:amap_location_fluttify/amap_location_fluttify.dart';

class _MAParticleRotationGenerate_SUB extends NSObject with MAParticleRotationGenerate {}

mixin MAParticleRotationGenerate on NSObject {
  

  static MAParticleRotationGenerate subInstance() => _MAParticleRotationGenerate_SUB();

  

  @override
  final String tag__ = 'huaji_map_core';

  

  

  
  Future<double?> getRotate() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: MAParticleRotationGenerate@$refId::getRotate([])');
    }
  
    // invoke native method
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod('MAParticleRotationGenerate::getRotate', {"__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
}

extension MAParticleRotationGenerate_Batch on List<MAParticleRotationGenerate> {
  //region methods
  
  Future<List<double?>> getRotate_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod('MAParticleRotationGenerate::getRotate_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<double?>().toList();
  }
  
  //endregion
}
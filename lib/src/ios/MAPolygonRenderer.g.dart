// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:huaji_map_core/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';
import 'package:amap_core_fluttify/amap_core_fluttify.dart';
import 'package:amap_search_fluttify/amap_search_fluttify.dart';
import 'package:amap_location_fluttify/amap_location_fluttify.dart';

class MAPolygonRenderer extends MAOverlayPathRenderer  {
  //region constants
  static const String name__ = 'MAPolygonRenderer';

  @override
  final String tag__ = 'huaji_map_core';

  
  //endregion

  //region creators
  static Future<MAPolygonRenderer> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createMAPolygonRenderer',
      {'init': init}
    );
    return AmapMapFluttifyIOSAs<MAPolygonRenderer>(__result__)!;
  }
  
  static Future<List<MAPolygonRenderer>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kAmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchMAPolygonRenderer',
      {'length': length, 'init': init}
    );
    return __result_batch__
        ?.map((it) => AmapMapFluttifyIOSAs<MAPolygonRenderer>(it))
        .where((element) => element !=null)
        .cast<MAPolygonRenderer>()
        .toList() ?? <MAPolygonRenderer>[];
  }
  
  //endregion

  //region getters
  Future<MAPolygon?> get_polygon() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MAPolygonRenderer::get_polygon", {'__this__': this});
    return AmapMapFluttifyIOSAs<MAPolygon>(__result__);
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<MAPolygonRenderer?> initWithPolygon(MAPolygon? polygon) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: MAPolygonRenderer@$refId::initWithPolygon([])');
    }
  
    // invoke native method
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod('MAPolygonRenderer::initWithPolygon', {"polygon": polygon, "__this__": this});
  
  
    // handle native call
  
  
    return AmapMapFluttifyIOSAs<MAPolygonRenderer>(__result__);
  }
  
  //endregion

  @override
  String toString() {
    return 'MAPolygonRenderer{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension MAPolygonRenderer_Batch on List<MAPolygonRenderer?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  Future<List<MAPolygon?>> get_polygon_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MAPolygonRenderer::get_polygon_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => AmapMapFluttifyIOSAs<MAPolygon>(__result__)).cast<MAPolygon?>().toList();
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<MAPolygonRenderer?>> initWithPolygon_batch(List<MAPolygon?> polygon) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod('MAPolygonRenderer::initWithPolygon_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"polygon": polygon[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => AmapMapFluttifyIOSAs<MAPolygonRenderer>(__result__)).cast<MAPolygonRenderer?>().toList();
  }
  
  //endregion
}
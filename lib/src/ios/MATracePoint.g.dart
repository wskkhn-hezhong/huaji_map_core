// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:huaji_map_core/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';
import 'package:amap_core_fluttify/amap_core_fluttify.dart';
import 'package:amap_search_fluttify/amap_search_fluttify.dart';
import 'package:amap_location_fluttify/amap_location_fluttify.dart';

class MATracePoint extends NSObject with NSCoding {
  //region constants
  static const String name__ = 'MATracePoint';

  @override
  final String tag__ = 'huaji_map_core';

  
  //endregion

  //region creators
  static Future<MATracePoint> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createMATracePoint',
      {'init': init}
    );
    return AmapMapFluttifyIOSAs<MATracePoint>(__result__)!;
  }
  
  static Future<List<MATracePoint>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kAmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchMATracePoint',
      {'length': length, 'init': init}
    );
    return __result_batch__
        ?.map((it) => AmapMapFluttifyIOSAs<MATracePoint>(it))
        .where((element) => element !=null)
        .cast<MATracePoint>()
        .toList() ?? <MATracePoint>[];
  }
  
  //endregion

  //region getters
  Future<double?> get_latitude() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MATracePoint::get_latitude", {'__this__': this});
    return __result__;
  }
  
  Future<double?> get_longitude() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MATracePoint::get_longitude", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_latitude(double? latitude) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATracePoint::set_latitude', <String, dynamic>{'__this__': this, "latitude": latitude});
  }
  
  Future<void> set_longitude(double? longitude) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATracePoint::set_longitude', <String, dynamic>{'__this__': this, "longitude": longitude});
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'MATracePoint{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension MATracePoint_Batch on List<MATracePoint?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  Future<List<double?>> get_latitude_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MATracePoint::get_latitude_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<double?>().toList();
  }
  
  Future<List<double?>> get_longitude_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MATracePoint::get_longitude_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<double?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_latitude_batch(List<double?> latitude) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATracePoint::set_latitude_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "latitude": latitude[__i__]}]);
  
  
  }
  
  Future<void> set_longitude_batch(List<double?> longitude) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATracePoint::set_longitude_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "longitude": longitude[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}
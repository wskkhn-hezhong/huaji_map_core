// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:huaji_map_core/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';
import 'package:amap_core_fluttify/amap_core_fluttify.dart';
import 'package:amap_search_fluttify/amap_search_fluttify.dart';
import 'package:amap_location_fluttify/amap_location_fluttify.dart';

class MAParticleRectShapeModule extends NSObject with MAParticleShapeModule {
  //region constants
  static const String name__ = 'MAParticleRectShapeModule';

  @override
  final String tag__ = 'huaji_map_core';

  
  //endregion

  //region creators
  static Future<MAParticleRectShapeModule> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createMAParticleRectShapeModule',
      {'init': init}
    );
    return AmapMapFluttifyIOSAs<MAParticleRectShapeModule>(__result__)!;
  }
  
  static Future<List<MAParticleRectShapeModule>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kAmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchMAParticleRectShapeModule',
      {'length': length, 'init': init}
    );
    return __result_batch__
        ?.map((it) => AmapMapFluttifyIOSAs<MAParticleRectShapeModule>(it))
        .where((element) => element !=null)
        .cast<MAParticleRectShapeModule>()
        .toList() ?? <MAParticleRectShapeModule>[];
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<MAParticleRectShapeModule?> initWithLeft_top_right_bottom_useRatio(double? left, double? top, double? right, double? bottom, bool? isUseRatio) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: MAParticleRectShapeModule@$refId::initWithLeft([\'left\':$left, \'top\':$top, \'right\':$right, \'bottom\':$bottom, \'isUseRatio\':$isUseRatio])');
    }
  
    // invoke native method
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod('MAParticleRectShapeModule::initWithLeft_top_right_bottom_useRatio', {"left": left, "top": top, "right": right, "bottom": bottom, "isUseRatio": isUseRatio, "__this__": this});
  
  
    // handle native call
  
  
    return AmapMapFluttifyIOSAs<MAParticleRectShapeModule>(__result__);
  }
  
  //endregion

  @override
  String toString() {
    return 'MAParticleRectShapeModule{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension MAParticleRectShapeModule_Batch on List<MAParticleRectShapeModule?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<MAParticleRectShapeModule?>> initWithLeft_top_right_bottom_useRatio_batch(List<double?> left, List<double?> top, List<double?> right, List<double?> bottom, List<bool?> isUseRatio) async {
    assert(left.length == top.length && top.length == right.length && right.length == bottom.length && bottom.length == isUseRatio.length);
  
    // invoke native method
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod('MAParticleRectShapeModule::initWithLeft_top_right_bottom_useRatio_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"left": left[__i__], "top": top[__i__], "right": right[__i__], "bottom": bottom[__i__], "isUseRatio": isUseRatio[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => AmapMapFluttifyIOSAs<MAParticleRectShapeModule>(__result__)).cast<MAParticleRectShapeModule?>().toList();
  }
  
  //endregion
}
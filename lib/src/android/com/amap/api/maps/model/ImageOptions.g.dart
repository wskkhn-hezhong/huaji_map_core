// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:huaji_map_core/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';
import 'package:amap_core_fluttify/amap_core_fluttify.dart';
import 'package:amap_search_fluttify/amap_search_fluttify.dart';
import 'package:amap_location_fluttify/amap_location_fluttify.dart';

class com_amap_api_maps_model_ImageOptions extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.amap.api.maps.model.ImageOptions';

  @override
  final String tag__ = 'huaji_map_core';

  
  //endregion

  //region creators
  static Future<com_amap_api_maps_model_ImageOptions> create__() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_amap_api_maps_model_ImageOptions__',
    
    );
    return AmapMapFluttifyAndroidAs<com_amap_api_maps_model_ImageOptions>(__result__)!;
  }
  
  static Future<List<com_amap_api_maps_model_ImageOptions>> create_batch__(int length) async {
    assert(true);
    final __result_batch__ = await  kAmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_amap_api_maps_model_ImageOptions__',
      {'length': length}
    );
    return __result_batch__
        ?.map((it) => AmapMapFluttifyAndroidAs<com_amap_api_maps_model_ImageOptions>(it))
        .where((element) => element !=null)
        .cast<com_amap_api_maps_model_ImageOptions>()
        .toList() ?? <com_amap_api_maps_model_ImageOptions>[];
  }
  
  //endregion

  //region getters
  Future<int?> get_type() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.ImageOptions::get_type", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_color() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.ImageOptions::get_color", {'__this__': this});
    return __result__;
  }
  
  Future<double?> get_radius() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.ImageOptions::get_radius", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_type(int? type) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.ImageOptions::set_type', <String, dynamic>{'__this__': this, "type": type});
  }
  
  Future<void> set_color(int? color) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.ImageOptions::set_color', <String, dynamic>{'__this__': this, "color": color});
  }
  
  Future<void> set_radius(double? radius) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.ImageOptions::set_radius', <String, dynamic>{'__this__': this, "radius": radius});
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'com_amap_api_maps_model_ImageOptions{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_amap_api_maps_model_ImageOptions_Batch on List<com_amap_api_maps_model_ImageOptions?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  Future<List<int?>> get_type_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.ImageOptions::get_type_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<int?>> get_color_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.ImageOptions::get_color_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<double?>> get_radius_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.ImageOptions::get_radius_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<double?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_type_batch(List<int?> type) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.ImageOptions::set_type_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "type": type[__i__]}]);
  
  
  }
  
  Future<void> set_color_batch(List<int?> color) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.ImageOptions::set_color_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "color": color[__i__]}]);
  
  
  }
  
  Future<void> set_radius_batch(List<double?> radius) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.ImageOptions::set_radius_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "radius": radius[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}
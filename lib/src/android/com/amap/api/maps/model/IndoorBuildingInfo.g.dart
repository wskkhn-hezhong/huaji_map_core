// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:huaji_map_core/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';
import 'package:amap_core_fluttify/amap_core_fluttify.dart';
import 'package:amap_search_fluttify/amap_search_fluttify.dart';
import 'package:amap_location_fluttify/amap_location_fluttify.dart';

class com_amap_api_maps_model_IndoorBuildingInfo extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.amap.api.maps.model.IndoorBuildingInfo';

  @override
  final String tag__ = 'huaji_map_core';

  
  //endregion

  //region creators
  static Future<com_amap_api_maps_model_IndoorBuildingInfo> create__() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_amap_api_maps_model_IndoorBuildingInfo__',
    
    );
    return AmapMapFluttifyAndroidAs<com_amap_api_maps_model_IndoorBuildingInfo>(__result__)!;
  }
  
  static Future<List<com_amap_api_maps_model_IndoorBuildingInfo>> create_batch__(int length) async {
    assert(true);
    final __result_batch__ = await  kAmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_amap_api_maps_model_IndoorBuildingInfo__',
      {'length': length}
    );
    return __result_batch__
        ?.map((it) => AmapMapFluttifyAndroidAs<com_amap_api_maps_model_IndoorBuildingInfo>(it))
        .where((element) => element !=null)
        .cast<com_amap_api_maps_model_IndoorBuildingInfo>()
        .toList() ?? <com_amap_api_maps_model_IndoorBuildingInfo>[];
  }
  
  //endregion

  //region getters
  Future<String?> get_activeFloorName() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_activeFloorName", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_activeFloorIndex() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_activeFloorIndex", {'__this__': this});
    return __result__;
  }
  
  Future<String?> get_poiid() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_poiid", {'__this__': this});
    return __result__;
  }
  
  Future<Int32List?> get_floor_indexs() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_floor_indexs", {'__this__': this});
    return __result__ as Int32List;
  }
  
  Future<List<String>?> get_floor_names() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_floor_names", {'__this__': this});
    return (__result__ as List?)?.cast<String>();
  }
  
  //endregion

  //region setters
  Future<void> set_activeFloorName(String? activeFloorName) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_activeFloorName', <String, dynamic>{'__this__': this, "activeFloorName": activeFloorName});
  }
  
  Future<void> set_activeFloorIndex(int? activeFloorIndex) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_activeFloorIndex', <String, dynamic>{'__this__': this, "activeFloorIndex": activeFloorIndex});
  }
  
  Future<void> set_poiid(String? poiid) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_poiid', <String, dynamic>{'__this__': this, "poiid": poiid});
  }
  
  Future<void> set_floor_indexs(Int32List? floor_indexs) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_floor_indexs', <String, dynamic>{'__this__': this, "floor_indexs": floor_indexs});
  }
  
  Future<void> set_floor_names(List<String>? floor_names) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_floor_names', <String, dynamic>{'__this__': this, "floor_names": floor_names});
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'com_amap_api_maps_model_IndoorBuildingInfo{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_amap_api_maps_model_IndoorBuildingInfo_Batch on List<com_amap_api_maps_model_IndoorBuildingInfo?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  Future<List<String?>> get_activeFloorName_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_activeFloorName_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<String?>().toList();
  }
  
  Future<List<int?>> get_activeFloorIndex_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_activeFloorIndex_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<String?>> get_poiid_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_poiid_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<String?>().toList();
  }
  
  Future<List<Int32List?>> get_floor_indexs_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_floor_indexs_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__ as Int32List).cast<Int32List?>().toList();
  }
  
  Future<List<List<String>?>> get_floor_names_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("com.amap.api.maps.model.IndoorBuildingInfo::get_floor_names_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => (__result__ as List?)?.cast<String>()).cast<List<String>?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_activeFloorName_batch(List<String?> activeFloorName) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_activeFloorName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "activeFloorName": activeFloorName[__i__]}]);
  
  
  }
  
  Future<void> set_activeFloorIndex_batch(List<int?> activeFloorIndex) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_activeFloorIndex_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "activeFloorIndex": activeFloorIndex[__i__]}]);
  
  
  }
  
  Future<void> set_poiid_batch(List<String?> poiid) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_poiid_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "poiid": poiid[__i__]}]);
  
  
  }
  
  Future<void> set_floor_indexs_batch(List<Int32List?> floor_indexs) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_floor_indexs_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "floor_indexs": floor_indexs[__i__]}]);
  
  
  }
  
  Future<void> set_floor_names_batch(List<List<String>?> floor_names) async {
    await kAmapMapFluttifyChannel.invokeMethod('com.amap.api.maps.model.IndoorBuildingInfo::set_floor_names_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "floor_names": floor_names[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}
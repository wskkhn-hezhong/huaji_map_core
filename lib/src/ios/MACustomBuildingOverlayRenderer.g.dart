// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:huaji_map_core/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';
import 'package:amap_core_fluttify/amap_core_fluttify.dart';
import 'package:amap_search_fluttify/amap_search_fluttify.dart';
import 'package:amap_location_fluttify/amap_location_fluttify.dart';

class MACustomBuildingOverlayRenderer extends MAOverlayRenderer  {
  //region constants
  static const String name__ = 'MACustomBuildingOverlayRenderer';

  @override
  final String tag__ = 'huaji_map_core';

  
  //endregion

  //region creators
  static Future<MACustomBuildingOverlayRenderer> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createMACustomBuildingOverlayRenderer',
      {'init': init}
    );
    return AmapMapFluttifyIOSAs<MACustomBuildingOverlayRenderer>(__result__)!;
  }
  
  static Future<List<MACustomBuildingOverlayRenderer>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kAmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchMACustomBuildingOverlayRenderer',
      {'length': length, 'init': init}
    );
    return __result_batch__
        ?.map((it) => AmapMapFluttifyIOSAs<MACustomBuildingOverlayRenderer>(it))
        .where((element) => element !=null)
        .cast<MACustomBuildingOverlayRenderer>()
        .toList() ?? <MACustomBuildingOverlayRenderer>[];
  }
  
  //endregion

  //region getters
  Future<MACustomBuildingOverlay?> get_customBuildingOverlay() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MACustomBuildingOverlayRenderer::get_customBuildingOverlay", {'__this__': this});
    return AmapMapFluttifyIOSAs<MACustomBuildingOverlay>(__result__);
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<MACustomBuildingOverlayRenderer?> initWithCustomBuildingOverlay(MACustomBuildingOverlay? customBuildingOverlay) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: MACustomBuildingOverlayRenderer@$refId::initWithCustomBuildingOverlay([])');
    }
  
    // invoke native method
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod('MACustomBuildingOverlayRenderer::initWithCustomBuildingOverlay', {"customBuildingOverlay": customBuildingOverlay, "__this__": this});
  
  
    // handle native call
  
  
    return AmapMapFluttifyIOSAs<MACustomBuildingOverlayRenderer>(__result__);
  }
  
  //endregion

  @override
  String toString() {
    return 'MACustomBuildingOverlayRenderer{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension MACustomBuildingOverlayRenderer_Batch on List<MACustomBuildingOverlayRenderer?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  Future<List<MACustomBuildingOverlay?>> get_customBuildingOverlay_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MACustomBuildingOverlayRenderer::get_customBuildingOverlay_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => AmapMapFluttifyIOSAs<MACustomBuildingOverlay>(__result__)).cast<MACustomBuildingOverlay?>().toList();
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<MACustomBuildingOverlayRenderer?>> initWithCustomBuildingOverlay_batch(List<MACustomBuildingOverlay?> customBuildingOverlay) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod('MACustomBuildingOverlayRenderer::initWithCustomBuildingOverlay_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"customBuildingOverlay": customBuildingOverlay[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => AmapMapFluttifyIOSAs<MACustomBuildingOverlayRenderer>(__result__)).cast<MACustomBuildingOverlayRenderer?>().toList();
  }
  
  //endregion
}
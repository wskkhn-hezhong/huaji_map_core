// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:huaji_map_core/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';
import 'package:amap_core_fluttify/amap_core_fluttify.dart';
import 'package:amap_search_fluttify/amap_search_fluttify.dart';
import 'package:amap_location_fluttify/amap_location_fluttify.dart';

class MATileOverlayPath extends NSObject  {
  //region constants
  static const String name__ = 'MATileOverlayPath';

  @override
  final String tag__ = 'huaji_map_core';

  
  //endregion

  //region creators
  static Future<MATileOverlayPath> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createMATileOverlayPath',
      {'init': init}
    );
    return AmapMapFluttifyIOSAs<MATileOverlayPath>(__result__)!;
  }
  
  static Future<List<MATileOverlayPath>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kAmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchMATileOverlayPath',
      {'length': length, 'init': init}
    );
    return __result_batch__
        ?.map((it) => AmapMapFluttifyIOSAs<MATileOverlayPath>(it))
        .where((element) => element !=null)
        .cast<MATileOverlayPath>()
        .toList() ?? <MATileOverlayPath>[];
  }
  
  //endregion

  //region getters
  Future<int?> get_x() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_x", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_y() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_y", {'__this__': this});
    return __result__;
  }
  
  Future<double?> get_contentScaleFactor() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_contentScaleFactor", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_index() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_index", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_requestId() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_requestId", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_x(int? x) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_x', <String, dynamic>{'__this__': this, "x": x});
  }
  
  Future<void> set_y(int? y) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_y', <String, dynamic>{'__this__': this, "y": y});
  }
  
  Future<void> set_contentScaleFactor(double? contentScaleFactor) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_contentScaleFactor', <String, dynamic>{'__this__': this, "contentScaleFactor": contentScaleFactor});
  }
  
  Future<void> set_index(int? index) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_index', <String, dynamic>{'__this__': this, "index": index});
  }
  
  Future<void> set_requestId(int? requestId) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_requestId', <String, dynamic>{'__this__': this, "requestId": requestId});
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'MATileOverlayPath{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension MATileOverlayPath_Batch on List<MATileOverlayPath?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  Future<List<int?>> get_x_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_x_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<int?>> get_y_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_y_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<double?>> get_contentScaleFactor_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_contentScaleFactor_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<double?>().toList();
  }
  
  Future<List<int?>> get_index_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_index_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<int?>> get_requestId_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MATileOverlayPath::get_requestId_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_x_batch(List<int?> x) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_x_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "x": x[__i__]}]);
  
  
  }
  
  Future<void> set_y_batch(List<int?> y) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_y_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "y": y[__i__]}]);
  
  
  }
  
  Future<void> set_contentScaleFactor_batch(List<double?> contentScaleFactor) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_contentScaleFactor_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "contentScaleFactor": contentScaleFactor[__i__]}]);
  
  
  }
  
  Future<void> set_index_batch(List<int?> index) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_index_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "index": index[__i__]}]);
  
  
  }
  
  Future<void> set_requestId_batch(List<int?> requestId) async {
    await kAmapMapFluttifyChannel.invokeMethod('MATileOverlayPath::set_requestId_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "requestId": requestId[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}